<% import com.incra.model.Origin %>
<% import com.incra.model.GridCell %>
<% import com.incra.model.Site %>
<% import com.incra.model.Facility %>

<%@ val originOpt: Option[com.incra.model.Origin] %>
<%@ val siteOpt: Option[com.incra.model.Site] %>
<%@ val gridCells: Seq[com.incra.model.GridCell] %>
<%@ val origins: Seq[com.incra.model.Origin] %>
<%@ val sites: Seq[com.incra.model.Site] %>
<%@ val facilities: Seq[com.incra.model.Facility] %>
<%@ val dayIndex: Int %>
<%@ val windSpd: Double %>
<%@ val windHdg: Double %>
<%@ val facilitiesActive: Boolean %>

<style>

  #map {
  height: 500px;
  width: 700px;
  }
</style>

<div class="row" style="margin-top: 30px">
<div class="col-md-8" style="background: #ccc; padding: 10px">
  Projected Spread
</br>
<div id="map"></div>
</div>
<div class="col-md-4">
<form id="mapSettingsForm" method="POST" action="/process">
<h4>Settings</h4>
Time:
<select id="dayIndex" name="dayIndex">
<option ${(if (dayIndex == 0) "selected" else "")} value="0">Onset</option>
<option ${(if (dayIndex == 1) "selected" else "")} value="1">1 Day</option>
<option ${(if (dayIndex == 2) "selected" else "")} value="2">2 Days</option>
<option ${(if (dayIndex == 3) "selected" else "")} value="3">3 Days</option>
<option ${(if (dayIndex == 4) "selected" else "")} value="4">4 Days</option>
<option ${(if (dayIndex == 5) "selected" else "")} value="5">5 Days</option>
</select>
<br/>
Wind (speed mph): <input name="windSpd" type="text" size="7" value="${windSpd}"/> <input type="submit" value="Go" />
<br/>
Wind (heading deg): <input name="windHdg" type="text" size="7" value="${("%03.0f" format windHdg)}"/> <input type="submit" value="Go" />
<br>
  <input type="checkbox" id="facilitiesActive" name="facilitiesActive" ${(if (facilitiesActive) "checked" else "")} />
  Facilities Active
  </form>

  #if (origins.size > 0)
    <h4>Case Tracking</h4>
    <table class="table">
    <tr>
      <th>Name</th>
      <th>Date</th>
      <th>Lat</th>
      <th>Lng</th>
    </tr>
    #for (origin <- origins)
      <tr bgcolor="${(if (origin == originOpt.getOrElse(null)) "#ff9090" else "white")}">
        <td>${origin.name}</td>
        <td>${origin.date}</td>
        <td>${origin.lat}</td>
        <td>${origin.lng}</td>
      </tr>
    #end
    </table>
  #end
</div>
</div>

<script>

  var map;
  function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
  center: {lat: 6.503, lng: -10.044},
  zoom: 9
  });

  #if (originOpt.isDefined)
    var marker = new google.maps.Marker({
    position: {lat: ${originOpt.get.lat}, lng: ${originOpt.get.lng}},
    map: map,
    title: '${originOpt.get.name}'
    });
  #end

  #if (siteOpt.isDefined)
    var marker = new google.maps.Marker({
    position: {lat: ${siteOpt.get.lat}, lng: ${siteOpt.get.lng}},
    map: map,
    title: '${siteOpt.get.name}'
    });
  #end

  #for (gridCell <- gridCells)
    new google.maps.Rectangle({
    strokeWeight: 0,
    fillColor: '#FF0000',
    fillOpacity: ${gridCell.probability},
    map: map,
    bounds: new google.maps.LatLngBounds(
    new google.maps.LatLng(${gridCell.lowerLeftLat}, ${gridCell.lowerLeftLng}), // lower left
    new google.maps.LatLng(${gridCell.upperRightLat}, ${gridCell.upperRightLng})) // upper right
    });
  #end

  #for (site <- sites)
    new google.maps.Circle({
    strokeColor: '#FF0000',
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: '#008000',
    fillOpacity: 0.35,
    map: map,
    center: new google.maps.LatLng(${site.lat}, ${site.lng}),
    radius: 5000
    });
  #end

  #for (facility <- facilities)
    new google.maps.Rectangle({
    strokeColor: '#00FF00',
    strokeOpacity: 0.8,
    strokeWeight: 2,
    fillColor: '#008080',
    fillOpacity: 0.35,
    map: map,
    bounds: new google.maps.LatLngBounds(
    new google.maps.LatLng(${facility.lat}-0.05, ${facility.lng}-0.05), // lower left
    new google.maps.LatLng(${facility.lat}+0.05, ${facility.lng}+0.05)) // upper right
    });
  #end
  }
</script>

<script>
  $( document ).ready(function() {

  $( "#dayIndex" ).change(function() {
  $("#mapSettingsForm").submit();
  });

  $( "#facilitiesActive" ).change(function() {
  $("#mapSettingsForm").submit();
  });

  });
</script>

<script src="https://maps.googleapis.com/maps/api/js?callback=initMap"
async defer>
</script>